#!/usr/bin/env python
#-*-coding:utf-8-*-
import requests
import datetime
import argparse
# TODO Get api token from https://www.toggl.com/app/profile
# Save as string in api_token.py
from secret import api_token

def mintohour(i):
    hours = i // 60
    minutes = i % 60
    if minutes != 0:
        return '%d hours, %d minutes' %(hours, minutes)
    else:
        return '%d hours' %(hours)

parser = argparse.ArgumentParser(description='Nag at people who suck at toggling.')

parser.add_argument('--uid', type=str)      # käyttäjän id
parser.add_argument('--wid', type=str)      # työtilan id
parser.add_argument('--since', type=int)    # tutkittavan ajanjakson alku, päiviä taaksepäin nykyhetkestä
parser.add_argument('--days', type=int)     # tutkittavan ajanjakson pituus päivinä
parser.add_argument('--low-warn', type=int, dest='low_warn')
parser.add_argument('--low-crit', type=int, dest='low_crit')
parser.add_argument('--hi-warn', type=int, dest='hi_warn')
parser.add_argument('--hi-crit', type=int, dest='hi_crit')

args = parser.parse_args()

today = datetime.date.today()
since = today - datetime.timedelta(days=args.since)
until = since + datetime.timedelta(days=args.days)

# Toggl reports API
# https://github.com/toggl/toggl_api_docs/blob/master/reports/summary.md

payload = {
  'user_ids': args.uid,
  'workspace_id':args.wid,
  'since':since,
  'until':until,
  'user_agent':'api_test'
}

r = requests.get(
  'https://toggl.com/reports/api/v2/summary',
  auth = (api_token,'api_token'),
  params = payload)

response = r.json()

millisecs = int(response['total_grand'])
minutes = millisecs / 60000

if (minutes <= args.low_crit):
    print 'CRITICAL - %s, less than low-crit;' %(mintohour(minutes))
    exit(2)
elif (minutes <= args.low_warn):
    print 'WARNING - %s, less than low-warn;' %(mintohour(minutes))
    exit(1)
elif (minutes >= args.hi_crit):
    print 'CRITICAL - %s, more than hi-crit;' %(mintohour(minutes))
    exit(2)
elif (minutes >= args.hi_warn):
    print 'WARNING - %s, more than hi-warn;' %(mintohour(minutes))
    exit(1)
else:
    print 'OK - %s;' %(mintohour(minutes))
    exit(0)
